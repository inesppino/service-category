{"version":3,"sources":["components/ServiceCategoryList.js","components/ServiceCategoryCard.js","App.js","services/serviceCategoryService.js","index.js"],"names":["ServiceCategoryList","this","props","list","titleList","map","category","Caption","includes","key","Id","split","Component","ServiceCategoryCard","lists","title","handleCollapsible","id","collapsibleControl","className","onClick","Object","keys","App","state","servicesCategories","collapsibles","bind","fetchCategories","serviceCategory","fetch","then","response","json","data","value","ServiceCategory","push","setState","createCollapsiblesHandlers","forEach","index","categories","Free","Extra","cat","filterData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAyBeA,G,6KArBH,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,KAAMC,EADP,EACOA,UACd,OACE,6BACE,4BAAKA,GACL,4BACGD,EAAKE,KAAI,SAAAC,GACR,OAAIA,EAASC,QAAQC,SAAS,KAE1B,wBAAIC,IAAKH,EAASI,IAAKJ,EAASC,QAAQI,MAAM,KAAK,GAAnD,IAAuD,8BAAO,IAAML,EAASC,QAAQI,MAAM,KAAK,KAG1F,wBAAIF,IAAKH,EAASI,IAAKJ,EAASC,kB,GAdpBK,cCuBnBC,E,uKApBH,IAAD,EAC6DZ,KAAKC,MAAjEY,EADD,EACCA,MAAOC,EADR,EACQA,MAAOC,EADf,EACeA,kBAAmBC,EADlC,EACkCA,GAAIC,EADtC,EACsCA,mBAE7C,OACE,yBAAKC,UAAS,yBAAoBD,IAChC,yBAAKC,UAAU,wBACb,4BAAKJ,GACL,4BAAQK,QAAS,kBAAMJ,EAAkBC,KAAK,uBAAGE,UAAU,8BAE7D,yBAAKA,UAAU,uBAAuBF,GAAIF,GACvCM,OAAOC,KAAKR,GAAOT,KAAI,SAACF,GACvB,OACE,kBAAC,EAAD,CAAqBM,IAAKN,EAAMC,UAAWD,EAAMA,KAAMW,EAAMX,c,GAdzCS,aC+EnBW,E,kDA5Eb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDsB,MAAQ,CACXC,mBAAoB,GACpBC,aAAc,IAEhB,EAAKV,kBAAoB,EAAKA,kBAAkBW,KAAvB,gBANR,E,gEAUjB1B,KAAK2B,oB,wCAGY,IAAD,OACVC,EAAkB,GAaxB,OC/B+BC,MAFlB,sSAEkCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDmBlDF,MAAK,SAAAG,GAC1BA,EAAKC,MAAM9B,KAAI,SAAAC,GACb,OAAKuB,EAAgBvB,EAAS8B,gBAAgB1B,IAGvCmB,EAAgBvB,EAAS8B,gBAAgB1B,IAAI2B,KAAK/B,GAFhDuB,EAAgBvB,EAAS8B,gBAAgB1B,IAAM,MAI1D,EAAK4B,SAAS,CACZb,mBAAmB,eAAMI,IACxB,EAAKU,+BAGHV,I,mDAGqB,IACpBJ,EAAuBxB,KAAKuB,MAA5BC,mBACFC,EAAe,GAOrB,OANAL,OAAOC,KAAKG,GAAoBe,SAAQ,SAAClC,EAAUmC,GACnCf,EAAapB,GAAjB,IAAVmC,EAAuC,GAA8B,0BAEvExC,KAAKqC,SAAS,CACZZ,iBAEKA,I,iCAGEgB,GACT,IAAMC,EAAO,GACPC,EAAQ,GAEd,OADAF,EAAWrC,KAAI,SAAAwC,GAAG,OAAIA,EAAIF,KAAOA,EAAKN,KAAKQ,GAAOD,EAAMP,KAAKQ,MACtD,CAAEF,OAAMC,W,wCAGC3B,GAChB,IAAMS,EAAY,eAAQzB,KAAKuB,MAAME,cAChB,KAArBA,EAAaT,GAAaS,EAAaT,GAAM,uBAAyBS,EAAaT,GAAM,GACzFhB,KAAKqC,SAAS,CACZZ,mB,+BAIM,IAAD,SACsCzB,KAAKuB,MAA1CC,EADD,EACCA,mBAAoBC,EADrB,EACqBA,aAC5B,OACE,wBAAIP,UAAU,8BACXE,OAAOC,KAAKG,GAAoBpB,KAAI,SAAAC,GACnC,OACE,kBAAC,EAAD,CAAqBG,IAAKH,EACxBW,GAAIX,EACJQ,MAAO,EAAKgC,WAAWrB,EAAmBnB,IAC1CS,MAAOU,EAAmBnB,GAAU,GAAG8B,gBAAgB7B,QACvDS,kBAAmB,EAAKA,kBACxBE,mBAAoBQ,EAAapB,a,GArE7BM,aEAlBmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.499b4a4e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass ServiceCategoryList extends Component {\n\n  render() {\n    const { list, titleList } = this.props;\n    return (\n      <div>\n        <h3>{titleList}</h3>\n        <ul>\n          {list.map(category => {\n            if (category.Caption.includes('(')) {\n              return (\n                <li key={category.Id}>{category.Caption.split('(')[0]} <span>{'(' + category.Caption.split('(')[1]}</span></li>\n              )\n            } else {\n              return (<li key={category.Id}>{category.Caption}</li>)\n            }\n          })}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default ServiceCategoryList;","import React, { Component } from \"react\";\nimport ServiceCategoryList from './ServiceCategoryList';\n\nclass ServiceCategoryCard extends Component {\n\n  render() {\n    const { lists, title, handleCollapsible, id, collapsibleControl } = this.props;\n\n    return (\n      <div className={`card-container ${collapsibleControl}`}>\n        <div className=\"card-title-container\">\n          <h2>{title}</h2>\n          <button onClick={() => handleCollapsible(id)}><i className=\"fas fa-angle-up icon-up\"></i></button>\n        </div>\n        <div className=\"card-lists-container\" id={title}>\n          {Object.keys(lists).map((list) => {\n            return (\n              <ServiceCategoryList key={list} titleList={list} list={lists[list]} />\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n}\nexport default ServiceCategoryCard;","import React, { Component } from 'react';\nimport './App.scss';\nimport { fetchServiceCategory } from './services/serviceCategoryService';\nimport ServiceCategoryCard from './components/ServiceCategoryCard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      servicesCategories: {},\n      collapsibles: {},\n    }\n    this.handleCollapsible = this.handleCollapsible.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n  }\n\n  fetchCategories() {\n    const serviceCategory = {};\n    fetchServiceCategory().then(data => {\n      data.value.map(category => {\n        if (!serviceCategory[category.ServiceCategory.Id]) {\n          return serviceCategory[category.ServiceCategory.Id] = [];\n        }\n        return serviceCategory[category.ServiceCategory.Id].push(category);\n      });\n      this.setState({\n        servicesCategories: { ...serviceCategory },\n      }, this.createCollapsiblesHandlers\n      );\n    });\n    return serviceCategory;\n  }\n\n  createCollapsiblesHandlers() {\n    const { servicesCategories } = this.state;\n    const collapsibles = {};\n    Object.keys(servicesCategories).forEach((category, index) => {\n      index === 0 ? collapsibles[category] = '' : collapsibles[category] = 'inactive-collapsible';\n    })\n    this.setState({\n      collapsibles\n    })\n    return collapsibles;\n  }\n\n  filterData(categories) {\n    const Free = [];\n    const Extra = [];\n    categories.map(cat => cat.Free ? Free.push(cat) : Extra.push(cat));\n    return { Free, Extra };\n  }\n\n  handleCollapsible(id) {\n    const collapsibles = { ...this.state.collapsibles };\n    collapsibles[id] === '' ? collapsibles[id] = 'inactive-collapsible' : collapsibles[id] = '';\n    this.setState({\n      collapsibles\n    })\n  }\n\n  render() {\n    const { servicesCategories, collapsibles } = this.state;\n    return (\n      <ul className=\"service-category-main-list\">\n        {Object.keys(servicesCategories).map(category => {\n          return (\n            <ServiceCategoryCard key={category}\n              id={category}\n              lists={this.filterData(servicesCategories[category])}\n              title={servicesCategories[category][0].ServiceCategory.Caption}\n              handleCollapsible={this.handleCollapsible}\n              collapsibleControl={collapsibles[category]}\n            />)\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://debug-api.fastpayhotels.net/DataService/EntityService.svc/ServiceType?$filter=(IdServiceCategory%20eq%202)%20or%20(IdServiceCategory%20eq%203)%20or%20(IdServiceCategory%20eq%205)&$format=json&$expand=ServiceCategory&$select=Id,Free,Caption,ServiceCategory/Id,ServiceCategory/Caption'\n\nconst fetchServiceCategory = () => fetch(ENDPOINT).then(response => response.json());\n\nexport { fetchServiceCategory }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}